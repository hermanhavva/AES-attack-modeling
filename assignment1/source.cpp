#include "aes.hpp"


int main() 
{
    std::vector<unsigned char> plaintext = { 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff,
                                         0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd };

    std::cout << plaintext.size() << std::endl;

    std::vector<unsigned char> key = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f };

    std::vector<unsigned char> ivector = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f };

    AES aes(AESKeyLength::AES_128);

    makePadding(plaintext);

    //std::vector<unsigned char> cyphertext = aes.EncryptECB(plaintext, key);
    //std::vector<unsigned char> cyphertext = aes.EncryptCBC(plaintext, key, ivector);
    std::vector<unsigned char> cyphertext = aes.EncryptCFB(plaintext, key, ivector);
    std::vector<unsigned char> decrypted = aes.DecryptCFB(cyphertext, key, ivector);

    stripPadding(decrypted);

    return 0;
}